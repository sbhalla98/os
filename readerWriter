#include<stdio.h>
#include<pthread.h>
#include<semaphore.h>
#include<unistd.h>


pthread_mutex_t mutex,writeblock,s;
int data = 0,rcount = 0;


void *reader(void *arg)
{
  int f;
  f = ((int) arg);
  sleep(5);
  pthread_mutex_lock(&mutex);
  int y=0;
  y++;
  rcount = rcount + 1;
  if(rcount==1)
  pthread_mutex_lock(&writeblock);
  pthread_mutex_unlock(&mutex);
  printf("Data read by the reader %d %d times is %d and number of readers are: %d\n",f+1,y,data,rcount);
  sleep(1);
  pthread_mutex_lock(&mutex);
  rcount = rcount - 1;
  if(rcount==0)
  sleep(1);
  pthread_mutex_unlock(&writeblock);
  pthread_mutex_unlock(&mutex);
}



int main()
{
  int i,n; 
  pthread_t rtid[5],wtid[5];
  printf("enter no readers and writers\n");
  scanf("%d",&n);
  pthread_mutex_init(&mutex,NULL);
  pthread_mutex_init(&writeblock,NULL);
  if(n<0){
    printf("INVALID INPUT!!!!!!\n");
  }
  else{
  for(i=0;i<n;i++)
  {
    pthread_create(&rtid[i],NULL,reader,(void *)i);
    pthread_create(&wtid[i],NULL,writer,(void *)i);
    //pthread_create(&rtid[i],NULL,reader,(void *)i);
  }
  for(i=0;i<n;i++)
  {
    pthread_join(wtid[i],NULL);
    pthread_join(rtid[i],NULL);
  }
  }
	printf("PROCESS FINISHED\n");
        return 0;
}
